{"version":3,"sources":["Components/NavBar/NavBar.css","Components/NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","ul","__block","enclosingDiv","topDiv","middleDiv","bottomDiv","topDiv_X_state","middleDiv_X_state","bottomDiv_X_state","hide","linkActive","NavBar","props","className","isGoingUp","classes","buttonAnimationTop","buttonAnimationMiddle","buttonAnimationBottom","isShowingMenu","links","isVertical","react_default","a","createElement","onClick","join","push","NavLink","to","activeClassName","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","trackScrolling","goingUp","state","scrollTimeout","previousY","window","pageYOffset","setState","isGoinUp","setTimeout","showMenu","width","height","document","addEventListener","updateWindowDimensions","bind","removeEventListener","innerHeight","innerWidth","console","log","BrowserRouter","Components_NavBar_NavBar","toggleShowMenu","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca4abbb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavBarZheaderZ_qXyk\",\"ul\":\"NavBarZulZ2a2h6\",\"__block\":\"NavBarZ__blockZ1_XEa\",\"enclosingDiv\":\"NavBarZenclosingDivZ3t1Fw\",\"topDiv\":\"NavBarZtopDivZ2yFf-\",\"middleDiv\":\"NavBarZmiddleDivZ2ZWsZ\",\"bottomDiv\":\"NavBarZbottomDivZ2Llm3\",\"topDiv_X_state\":\"NavBarZtopDiv_X_stateZMX6jo\",\"middleDiv_X_state\":\"NavBarZmiddleDiv_X_stateZ1PT6E\",\"bottomDiv_X_state\":\"NavBarZbottomDiv_X_stateZ1RCWn\",\"hide\":\"NavBarZhideZ1kZr9\",\"linkActive\":\"NavBarZlinkActiveZ3wEAl\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nimport classes from './NavBar.css'\r\n\r\nconst NavBar = (props) => {\r\n\tlet className = null;\r\n\t//console.log(props.isGoingUp);\r\n\t\r\n\tif(!props.isGoingUp){\r\n\t\tclassName = classes.hide;\r\n\t\t//console.log(className);\r\n\t}else{\r\n\t\tclassName=null;\r\n\t\t//console.log(\"className\");\r\n\t}\r\n\r\n\r\n\tlet buttonAnimationTop = null;\r\n\tlet buttonAnimationMiddle = null;\r\n\tlet buttonAnimationBottom = null;\r\n\tif(props.isShowingMenu){\r\n\t\tbuttonAnimationTop = ' ' + classes.topDiv_X_state;\r\n\t\tbuttonAnimationMiddle = ' '+classes.middleDiv_X_state;\r\n\t\tbuttonAnimationBottom = ' '+classes.bottomDiv_X_state;\r\n\t}else{\r\n\t\tbuttonAnimationTop = null;\r\n\t\tbuttonAnimationMiddle = null;\r\n\t\tbuttonAnimationBottom = null;\r\n\t}\r\n\r\n\tlet links = null;\r\n\tif(props.isVertical){\r\n\t\tlinks =[\r\n\t\t\t<div className={classes.enclosingDiv} onClick={props.onClick}>\r\n\t\t\t\t<div className={[classes.topDiv, buttonAnimationTop].join(' ')}></div>\r\n\t\t\t\t<div className={[classes.middleDiv, buttonAnimationMiddle].join(' ')}></div>\r\n\t\t\t\t<div className={[classes.bottomDiv, buttonAnimationBottom].join(' ')}></div>\r\n\t\t\t</div>\r\n\t\t];\r\n\t\tif(props.isShowingMenu){\r\n\t\t\tlinks.push(\r\n\t\t\t\t\r\n\t\t\t\t<div className={classes.__block}>\r\n\t\t\t\t\t<li><NavLink to='' activeClassName={classes.linkActive}>Home</NavLink></li>\r\n\t\t\t\t\t<li><NavLink to='' activeClassName={classes.linkActive}>About Us</NavLink></li>\r\n\t\t\t\t\t<li><NavLink to='' activeClassName={classes.linkActive}>Technology</NavLink></li>\r\n\t\t\t\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Services</NavLink></li>\r\n\t\t\t\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Products</NavLink></li>\r\n\t\t\t\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Energy Efficiency</NavLink></li>\r\n\t\t\t\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Contact Us</NavLink></li>\r\n\t\t\t\t</div>\r\n\t\t\t\t \r\n\t\t\t);}\r\n\t}else{\r\n\t\tlinks =[<li><NavLink to='' activeClassName= {classes.linkActive}>Home</NavLink></li>,\r\n\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>About Us</NavLink></li>,\r\n\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Technology</NavLink></li>,\r\n\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Services</NavLink></li>,\r\n\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Products</NavLink></li>,\r\n\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Energy Efficiency</NavLink></li>,\r\n\t\t<li><NavLink to='' activeClassName= {classes.linkActive}>Contact Us</NavLink></li>];\r\n\t}\r\n\r\n\treturn(\r\n\t\t<header className={className+\" \"+classes.header}>\r\n\t\t\t<nav>\r\n\t\t\t\t<ul className={classes.ul}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{links}\r\n\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t\t)\r\n};\r\n\r\nexport default NavBar;","import React, {Component} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nimport NavBar from './Components/NavBar/NavBar.js';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isVertical:false,\n      scrollTimeout:false,\n      showMenu:false,\n      previousY:0.0,\n      isGoinUp:true,\n      width:0,\n      height:0,\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('scroll', this.trackScrolling);\n\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.trackScrolling);\n\n    window.removeEventListener('resize', this.updateWindowDimensions.bind(this));\n  }\n\n\n  updateWindowDimensions() {\n    let isVertical=false;\n    if(window.innerHeight>window.innerWidth){\n      isVertical = true;\n      console.log(isVertical ? \"is vertical\" : null);\n    }\n    this.setState({ width: window.innerWidth, height: window.innerHeight, isVertical:isVertical });\n  }\n\n  trackScrolling = () => {\n    let goingUp= false;\n    if(!this.state.scrollTimeout){\n      if(this.state.previousY>window.pageYOffset){\n        goingUp=true;\n        // console.log(\"Going Up\");\n      }else{\n        goingUp=false;\n        // console.log(\"Going Down\");\n    \n      }\n       this.setState({previousY:window.pageYOffset, scrollTimeout:true, isGoinUp:goingUp});\n       setTimeout(()=>{this.setState({scrollTimeout:false})}, 100);\n    }\n  }\n\n  toggleShowMenu(){\n    let a = !this.state.showMenu;\n    //console.log(a);\n    this.setState({showMenu:a});\n  }\n\n  render() {\n    return ([\n      <BrowserRouter>\n        <NavBar isGoingUp={this.state.isGoinUp} isVertical={this.state.isVertical} onClick={this.toggleShowMenu.bind(this)} isShowingMenu={this.state.showMenu}/>\n      </BrowserRouter>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n      <p>sdfg</p>,\n    ]);\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'normalize.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}